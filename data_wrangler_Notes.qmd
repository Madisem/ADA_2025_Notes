---
title: "data_wrangler"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

Notes from the week 3 (end of January), spring semester 2025 ADA!

```{r}
#| warning: false
library(tidyverse)
v<-1:10
v<-c(1:10)
m<-matrix(1:30, nrow=5,ncol=6, byrow=TRUE)
#default version fills matrix column wise
a<-array(data=1:90, dim=c(5,6,3))
a<-array(c(1:80, rep(NA,10)), dim=c(5,6,3))
```
#array can be n dimensional
#fill the array with caution, it repeats the element as vectors
```{r}
class(a)
dim(a)
attributes(a)
#matrix[row, column]
m[2:4, 3:5]
a[1,,1]
a[,,1]

s<-c("this","is","life")
m<-matrix(1:40, nrow=8, ncol =5)
b<-FALSE
class(b)
l<-list(s,m,b)
l<-list(string=s, matrix =m, bool = b)
l[[2]][2:4, 3:5]
l
df<-data.frame(firstName=c("Rick","Negan","Dwight"),
               community=c("Alexiandria","Saviors","Hilltop"),
               sex=c("M","M","F"),
               age=c(42,40,28))
df[["firstName"]]
#d6<-read_excel(f,sheet="Sheet1", col_names =TRUE)
#glimpse(d6)
```

->dataframe -consist of rows and columns, everything in the column should be the same type
->list can have bundle of type variables
 
```{r}
#| warning: false
f <-"/Users/madinaseidualy/Desktop/Data_Analyses/Country-Data-2016.csv"

#f<-"https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/Country-Data-2016.csv"
df<-read_csv(f, col_names=TRUE)

#structure(df)
#df <- as.data.frame(df) #from tibble to dataframe
#d<-as_tibble(df)  #converting back to tibble
#glimpse(df)
#df[["country"]]
colnames(df)
#df$area
m<-median(df$population, na.rm=TRUE)
m
ma<-median(df$area, na.rm=TRUE)
ma
df[["density"]] <-df$population/df$area
colnames(df)
v <-sort(df$density, decreasing = TRUE)
arr <- arrange(df, desc(density))
arr
d <- df %>%
  arrange(desc(density))
tail(d,10)
head(d,10)
```
read_csv - reads as tibble; extracts column as tabular data structure; adds functionality 
read.csv - converts strings to the factors? read.csv do funciton behind, reads as dataframe and when you extract column it reads as whole vector???

```{r}

f<-"https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/KamilarAndCooperData.csv"
d<-read_csv(f, col_names = TRUE)
#glimpse(d)
names(d)
colnames(d)
attach(d)
mean(LitterSz, na.rm = TRUE)
##when attaching : in function you dont specify the dataframe
detach(d)
with (d, mean(LitterSz, na.rm = TRUE))
##ways of specifying differently
summary(d)
##fives five number summary plus mean and number of NAs

#install.packages("skimr")
library(skimr)
skim(df)
```

Tidy data is a way to organize tabular data -> each of the data is tabular with column, each column has rows!  [in columns and rows]
wide format  -> tidy format
long format -> not tidy, several names repeats many times

summary(d) gives five number summary plus mean and number of NAs

```{r}
attach(df)
boxplot(log(d$Body_mass_female_mean))
stripchart(log(d$Body_mass_female_mean), method = "jitter", col = "blue", vertical = TRUE, add = TRUE)

boxplot(log(d$Body_mass_female_mean) ~ d$Family)
stripchart(log(d$Body_mass_female_mean) ~ d$Family, method = "jitter", col = "blue", vertical = TRUE, add = TRUE)

ggplot(data = d, mapping = aes(x = "", y=log(Body_mass_female_mean))) +
  geom_boxplot(na.rm = TRUE)+
  geom_jitter(color = "orange", width=0.3)

ggplot(data = d, mapping = aes(x = "", y=log(Body_mass_female_mean))) +
  geom_boxplot(na.rm = TRUE)+
  geom_point(color = "red")

p<-ggplot(data = d, mapping = aes(x = Family, y=log(Body_mass_female_mean))) +
  geom_boxplot(na.rm = TRUE)+
  geom_jitter(color = "orange", width=0.3)+
  theme(axis.text.x = element_text(angle = 90))+
  ylab("log(Female Body Mass)")
p

```

The `echo: false` option disables the printing of code (only output is displayed).
